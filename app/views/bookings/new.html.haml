:javascript
  $(document).ready(function(){
    $("#in").click(function(event){
      $("#overlay").fadeIn("fast");
      var amount = $('#total_donation').html(); 
      var amount_text = '$'+ amount;
      $('#amount_text').html(amount_text); 
      return false;
    });
    $("#close,#overlay,#cancel").click(function(event){
      $("#overlay").fadeOut("fast");
      return false;
    });
    $("#submit").click(function(event){
       $("#overlay").fadeOut("fast");
       $('#new_booking').submit();
    });
  }); 


#overlay{:style => "display: none;"}
  #box
    #form
      %a#close{:href => "#"}
      .light_box_top
        %h3 Review Amount
        = image_tag "goodinkind-logo-small_2.png", :class => 'light_box_logo'
      %h4.payment_cofirm_h4
        Your Credit Card is going to be charged with 
        %span{ :id => 'amount_text'}
        Upon confirmation the payment processing might take a minute or so- please do not click “Pay” again.
        %br/
        %br/
        If you want to proceed please "Confirm"
      %form.light_box_form
        %input.button.confirm_btn_light{:type => "submit", :value => "Confirm", :id => 'submit'}
        %input.button.btn_form.up_acc_btns_c{:type => "reset", :value => "Cancel", :id => 'cancel'}
.offer_form
  .np_page_top
    %p{:style => "font-size:16px"}
      %b Important notice
    %p
      %b Tax deductibility: 
      Our accountants tell us that as a buyer of a service, the value of the service itself would not be tax deductible (because you're getting the service in return for the price). But, any donation on top of the fair market value of the service should be tax deductible. This is not professional advice - please check with your accountants or IRS documentation if you want to be certain.
    %p
      %b Payment: 
      At the moment, once you confirm the information below, your payment will be immediately charged. Very shortly, we are implementing a feature where your card will be authorized immediately but not charged until later so that you can avail the service before the payment is processed. For more questions on payments and how it works, please visit our  
      %a{:href => faq_path, :target => "_blank"} FAQs section 
    %p
      %b Pricing: 
      Pricing for some services may require purchase of a minimum number of spots. If this is unclear, you may use the "Message me" feature to clarify with the service offerer before finalizing the purchase. Note that GoodInKind currently does not support a model where the price is dependent on the actual effort spent and is only known after the service has been delivered.
  / Booking form is submitted on 'onclick' event on pay button, which submits form with the help of its id.
  / When transaction is unsuccessfull the form id changes to edit_booking.And thus form is not submitted on pay button click.
  / Therefore id = 'new_booking' is forced 
  = form_for(@booking, :url => service_bookings_path(@service), :builder => JoshForm, :html => {:id => 'new_booking', :method => :post}) do |f|
    - if @booking.errors.any? and @booking.errors[:fg].any?
      #error_explanation
        %ul
          - @booking.errors.full_messages.each do |msg|
            %li= msg
    .setp_box
      %h3.setp_box_heading{:style => 'width:300px'}
        %span Purchase Details
      .booking
        %a{:href => service_path(@booking.service.permalink)}
          .fs_box{:style => "margin-left:200px"}
            - image = !@booking.service.images.first.blank? ? "#{@booking.service.images.first.image.url(:thumb)}" : "/images/missing/service.png"
            .fs_box_pic{:style=>"background:url(#{image}) no-repeat center center;"}
            .fs_left
              %span.fs_head= truncate(@booking.service.title, :lenght => 30)
              %span.fs_for for
              %span.fs_disc= truncate(@booking.service.nonprofit.name, :length => 30)
            .fs_price
              = "$#{@booking.service.amount.to_i}"
            .clear
      %p{:style => 'width:300px'}
        = f.text_field :seats_booked, :label => "No. of spots to buy", :class => "input_small", :hint => "This can be number of hours, number of people, etc. depending on the service"
      %p{:style => 'width:300px'}
        = f.text_field :additional_donation_amount, :label => "Additional Donation($)", :class => "input_small", :hint => "Optional. Our accountants tell us that any donation above the fair value of the service would be tax deductible!"
      %p{:style => 'width:300px'}
        %span.cc_charge GoodInKind service charge 
        %span.cc_charge_amt $ 0.0
      .clear
      %hr.pay_page_hr
      %p
        %span.payment_total You will be charged 
        %span.payment_total_amt $ 
        %span.payment_total_amt#total_donation= @booking.total_amount
        %span.payment_total_amt 
      :javascript
        var per_seat = #{@booking.service.amount.to_f}
    .setp_box{:id => 'cc_fields'}
      %h3.setp_box_heading
        %span Credit Card Details
      - if @cardonfile and !@cc.errors.any? and CARD_ON_FILE_SUPPORTED
        %p{:id => 'card_on_file'}
          = f.label "Card on file", :class => 'form_lbl'
          = f.check_box :cardonfile, {:class => 'input_checkbox', :checked => true}, "true", "false"
          %span.setp_box_p_span= "Use Card #{@cardonfile}"
        
      = fields_for :cc, @cc, :builder => JoshForm do |cc|
        = cc.text_field :name, :class => "input_half"
        %p
        = cc.select :type, [['Visa', 'visa'], ['MasterCard', 'master'], ['Discover', 'discover'], ['American Express', 'american_express']], {}, :class => "input_select", :label => "Credit card type"
        = cc.text_field :number, :class => "input_half", :label => "Credit card number"
        %p
          = cc.select :month, (1..12), {}, :class => 'input_select input_tiny',:pre => true, :error_class => "tiny_error", :label => "Expiration Date"
          = cc.select :year, (Date.today.year..Date.today.year+10), {}, :class => 'input_select input_tiny', :pre => true, :error_class => "tiny_error"
        = cc.text_field :verification_value, :class => "input_half", :label => "CVV/CVV2", :hint => "3 digits at back of card for VISA, MasterCard, Discover. 4 digits on front of card for AMEX"
        :javascript
          if ($('#cc_fields :checkbox').is(':checked')) $('#cc_fields p:gt(0)').hide();
          $('#cc_fields :checkbox').click( function() {
              $('#cc_fields p:gt(0)').toggle();
          });

    .setp_box
      %h3.setp_box_heading
        %span Billing Details
      = f.text_field :accountName, :label => "Bill to", :class => "input_half"
      = f.text_field :billToAddressLine1, :label => "Address Line1", :class => "input_half"
      = f.text_field :billToAddressLine2, :label => "Address Line2", :class => "input_half"
      = f.text_field :billToAddressLine3, :label => "Address Line3", :class => "input_half"
      %p
        = f.text_field :billToCity, :label => "City", :class => "input_tiny", :pre => true, :error_class => "tiny_error"
        = f.text_field :billToState, :label => "State", :class => "input_tiny", :pre => true, :error_class => "tiny_error", :hint => "Please enter 2 letter abbreviation such as NY, CA, MA"
      %p
        = f.text_field :billToZip, :label => "Zipcode", :class => "input_tiny", :pre => true, :error_class => "tiny_error"
        = f.text_field :billToCountry, :value => "US", :label => "Country", :class => "input_tiny", :pre => true, :error_class => "tiny_error", :hint => "Please enter max. 3 letter abbreviation."
    .input_post_div
      #in= f.submit 'Pay'


    
